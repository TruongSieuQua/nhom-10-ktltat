{"version":3,"file":"static/js/241.17227230.chunk.js","mappings":"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","sources":["../node_modules/@ant-design/icons-svg/es/asn/LinkOutlined.js","../node_modules/@ant-design/icons/es/icons/LinkOutlined.js","pages/Post/PostDetailScreen.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar LinkOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M574 665.4a8.03 8.03 0 00-11.3 0L446.5 781.6c-53.8 53.8-144.6 59.5-204 0-59.5-59.5-53.8-150.2 0-204l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3l-39.8-39.8a8.03 8.03 0 00-11.3 0L191.4 526.5c-84.6 84.6-84.6 221.5 0 306s221.5 84.6 306 0l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3L574 665.4zm258.6-474c-84.6-84.6-221.5-84.6-306 0L410.3 307.6a8.03 8.03 0 000 11.3l39.7 39.7c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c53.8-53.8 144.6-59.5 204 0 59.5 59.5 53.8 150.2 0 204L665.3 562.6a8.03 8.03 0 000 11.3l39.8 39.8c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c84.5-84.6 84.5-221.5 0-306.1zM610.1 372.3a8.03 8.03 0 00-11.3 0L372.3 598.7a8.03 8.03 0 000 11.3l39.6 39.6c3.1 3.1 8.2 3.1 11.3 0l226.4-226.4c3.1-3.1 3.1-8.2 0-11.3l-39.5-39.6z\" } }] }, \"name\": \"link\", \"theme\": \"outlined\" };\nexport default LinkOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LinkOutlinedSvg from \"@ant-design/icons-svg/es/asn/LinkOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar LinkOutlined = function LinkOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LinkOutlinedSvg\n  }));\n};\nLinkOutlined.displayName = 'LinkOutlined';\nexport default /*#__PURE__*/React.forwardRef(LinkOutlined);","import {\n  CloseOutlined,\n  EditOutlined,\n  EllipsisOutlined,\n  FacebookFilled,\n  HeartOutlined,\n  LinkOutlined,\n  MailOutlined,\n  QuestionCircleOutlined,\n  SendOutlined,\n  ShareAltOutlined,\n  TwitterCircleFilled,\n} from \"@ant-design/icons\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport {\n  Avatar,\n  Col,\n  Form,\n  Image,\n  message,\n  Popconfirm,\n  Row,\n  Space,\n  Tag,\n  Tooltip,\n  Typography,\n} from \"antd\";\nimport Button from \"antd/es/button\";\nimport Dropdown from \"antd/es/dropdown\";\nimport Menu from \"antd/es/menu\";\nimport LikeAnimation from \"components/Animation/LikeAnimation\";\nimport CommonAvatar from \"components/Avatar/CommonAvatar\";\nimport CommentSection from \"components/Comment/CommentSection\";\nimport PinterestLayout from \"components/ImageManager/PinterestLayout\";\nimport CustomInput2 from \"components/Input/CommonInput2\";\nimport CommonFullLoading from \"components/Loading/Loading\";\nimport MainLayout from \"layout/MainLayout\";\nimport { TError } from \"models/Error.interface\";\nimport moment from \"moment\";\nimport { loadingRef, modalRef } from \"Provider/GlobalUiContainer\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { useNavigate, useParams } from \"react-router\";\nimport {\n  useCommentPostMutation,\n  useGetPostByIdQuery,\n  useLikePostMutation,\n  useUpdatePostMutation,\n} from \"redux/api/postApi\";\nimport { useAppSelector } from \"redux/store\";\nimport { API_URL_WEB } from \"services/apiService\";\nimport { getRandomColor } from \"utils/randomColor\";\nimport { showMessage } from \"utils/toast\";\nimport { CommentForm, CommentValidatorSchema } from \"validators/Post.validator\";\n\nconst PostDetailScreen = (props: any) => {\n  const { user } = useAppSelector((state) => state.auth);\n  const params = useParams();\n  const navigate = useNavigate();\n  const {\n    data: post,\n    isLoading,\n    isError,\n    isSuccess: isSuccessPost,\n    refetch,\n    isFetching,\n  } = useGetPostByIdQuery(params.postId);\n  const [isFollow, setIsFollow] = useState(true);\n  const [deletePost] = useUpdatePostMutation();\n  const [commentMutate] = useCommentPostMutation();\n  const [likePost, { isSuccess }] = useLikePostMutation();\n  const moreMenu = React.useMemo(\n    () => (\n      <Menu style={{ fontSize: \"20px\" }}>\n        {/* <Menu.Item key=\"1\" icon={<DownloadOutlined />} onClick={downloadImage}>\n          Download image\n        </Menu.Item> */}\n        <Menu.Item key=\"3\" icon={<HeartOutlined />}>\n          Add to favorites\n        </Menu.Item>\n\n        {user && post && post?.user._id === user._id && (\n          <Popconfirm\n            title=\"Delete the task\"\n            description=\"Are you sure to delete this task?\"\n            okText=\"Yes\"\n            onConfirm={async () => {\n              try {\n                const response = await deletePost({\n                  postId: post?._id,\n                  method: \"DELETE\",\n                }).unwrap();\n                showMessage(\"Delete Post Success !\");\n                navigate(\"/\");\n              } catch (error: TError | any) {\n                showMessage(error, \"error\");\n              }\n            }}\n            okType=\"danger\"\n            icon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n          >\n            <Menu.Item\n              color=\"red\"\n              style={{\n                color: \"red\",\n              }}\n              onClick={() => {\n                //\n              }}\n              key=\"4\"\n              icon={<CloseOutlined color=\"red\" />}\n            >\n              Delete\n            </Menu.Item>\n          </Popconfirm>\n        )}\n      </Menu>\n    ),\n    [[post?._id]],\n  );\n  const sendComment = async (comment: CommentForm) => {\n    try {\n      if (post && user) {\n        const response = await commentMutate({\n          postId: post._id,\n          body: comment,\n        }).unwrap();\n        reset();\n      } else {\n        showMessage(\"Post not found\", \"error\");\n      }\n      return;\n    } catch (error: any) {\n      showMessage(error.message, \"error\");\n    }\n  };\n  const {\n    handleSubmit,\n    control,\n    formState: { errors },\n    reset,\n  } = useForm<CommentForm>({\n    resolver: zodResolver(CommentValidatorSchema),\n    defaultValues: {\n      comment: \"\",\n    },\n  });\n\n  const handleCopyClick = React.useCallback(() => {\n    navigator.clipboard.writeText(`${API_URL_WEB}/post/${post?._id}`);\n    message.info(\"Share moments with your friends\", 2.5);\n  }, [post?._id]);\n\n  const handleLike = React.useCallback(async () => {\n    if (post?._id && user) {\n      try {\n        const response: any = await likePost({\n          postId: post._id,\n        });\n        const isLike = response.data?.likes?.includes(user._id);\n      } catch (e: any) {\n        showMessage(e.message, \"error\");\n      }\n    }\n  }, [post?._id]);\n\n  /**Form Add Comment*/\n  if (isError) {\n    navigate(\"/notFound\");\n  }\n  if (isLoading || isFetching) {\n    return <CommonFullLoading />;\n  }\n\n  return (\n    <MainLayout>\n      <div className=\"w-full max-w-7xl py-4 px-8 h-full bg-white rounded-lg overflow-hidden mx-auto \">\n        {post ? (\n          <Row gutter={[32, 32]}>\n            {/**Post Header */}\n            <Col\n              span={24}\n              sm={24}\n              className=\"flex justify-between bg-white mt-4\"\n            >\n              {/*Uploader*/}\n              <Space className=\"flex items-center justify-between\">\n                <Space>\n                  {post && post.user ? (\n                    <CommonAvatar size={48} user={post.user} />\n                  ) : (\n                    <></>\n                  )}\n                  <Space direction=\"vertical\" size={2}>\n                    <Typography.Text\n                      strong\n                      className=\"text-lg text-ellipsis tracking-widest\"\n                    >\n                      {post?.user.fullName}\n                    </Typography.Text>\n                    <Tooltip title={moment(post.createdAt).fromNow()}>\n                      <Typography.Text>\n                        {moment(post.createdAt).fromNow()}\n                      </Typography.Text>\n                    </Tooltip>\n                  </Space>\n                </Space>\n                {/**follow button */}\n              </Space>\n\n              <Space>\n                {/**Share menu */}\n                <Dropdown\n                  overlay={shareMenu}\n                  trigger={[\"click\"]}\n                  placement=\"bottom\"\n                >\n                  <Button\n                    type=\"primary\"\n                    shape=\"circle\"\n                    className={classStyle[\"button\"]}\n                  >\n                    <ShareAltOutlined />\n                  </Button>\n                </Dropdown>\n                {/**Copy this post url */}\n                {user && (\n                  <Button\n                    type=\"primary\"\n                    shape=\"circle\"\n                    className={`${classStyle[\"button\"]}`}\n                    onClick={handleCopyClick}\n                  >\n                    <LinkOutlined />\n                  </Button>\n                )}\n                {/**Like this image */}\n                <Button\n                  type=\"text\"\n                  shape=\"circle\"\n                  onClick={handleLike}\n                  className={`${classStyle[\"button\"]}`}\n                  style={{ padding: \"0\" }}\n                >\n                  {user && user._id ? (\n                    <LikeAnimation\n                      like={post.likes.includes(user && user._id)}\n                    />\n                  ) : (\n                    \"Like\"\n                  )}\n                </Button>\n                {user && post?.user._id === user._id && (\n                  <Button\n                    type=\"ghost\"\n                    shape=\"circle\"\n                    onClick={() => {\n                      modalRef?.current?.show(post);\n                    }}\n                    className={`${classStyle[\"button\"]}`}\n                  >\n                    <EditOutlined />\n                  </Button>\n                )}\n                {/**More menu */}\n                <Dropdown\n                  overlay={moreMenu}\n                  trigger={[\"click\"]}\n                  placement=\"bottomRight\"\n                >\n                  <Button\n                    type=\"primary\"\n                    shape=\"circle\"\n                    className={classStyle[\"button\"]}\n                  >\n                    <EllipsisOutlined />\n                  </Button>\n                </Dropdown>\n              </Space>\n            </Col>\n            {/**Left pane */}\n            <Col\n              sm={24}\n              lg={12}\n              className=\"sm:max-h-[64rem] lg:max-h-4xl overflow-hidden\"\n            >\n              {/**Post image */}\n              <Image\n                src={post?.URL || post?.fileName}\n                width={\"auto\"}\n                height={\"auto\"}\n                className={classStyle[\"image\"]}\n                alt=\"Mountain image\"\n              />\n            </Col>\n            {/* Right pane */}\n            <Col sm={24} lg={12} className=\"sm:max-h-[64rem] lg:max-h-4xl\">\n              <Row className=\"h-full\">\n                {/**Post Body */}\n                <Col className=\"w-full h-full sm:text-center lg:text-left overflow-x-hidden \">\n                  <Row gutter={[32, 32]}>\n                    {/**Post detail */}\n                    <Col span={24}>\n                      {/**post title */}\n                      <Typography.Title level={2} style={{ fontWeight: \"700\" }}>\n                        {post?.title}\n                      </Typography.Title>\n                      {/**post content */}\n                      <Typography.Paragraph\n                        strong\n                        className=\"text-lg text-justify\"\n                      >\n                        {post?.description}\n                      </Typography.Paragraph>\n                      {/**post categoty */}\n                      {post.categories.map((category: any) => {\n                        return (\n                          <Tag\n                            key={category._id}\n                            color={getRandomColor()}\n                            className=\"text-base px-2 py-1\"\n                          >\n                            {category.value}\n                          </Tag>\n                        );\n                      })}\n                    </Col>\n                    {/**Add Comment */}\n                    {user && (\n                      <Col span={24} className=\"flex gap-4 mt-12\">\n                        <div className=\"w-full flex gap-4\">\n                          <Avatar\n                            size={48}\n                            src={user.avatar}\n                            alt=\"\"\n                            className=\"shrink-0 bg-[#f56a00]\"\n                          >\n                            {user.fullName}\n                          </Avatar>\n                          {/**comment input*/}\n                          <Form.Item className=\"w-full mb-0\">\n                            <Controller\n                              control={control}\n                              name=\"comment\"\n                              render={({ field }) => (\n                                <CustomInput2\n                                  {...field}\n                                  placeholder=\"Write a comment\"\n                                  className=\"grow h-12 rounded-full bg-[#e2e2e2] focus:bg-[white]\"\n                                  error={errors.comment?.message}\n                                />\n                              )}\n                            />\n                          </Form.Item>\n                          <Button\n                            type=\"primary\"\n                            onClick={handleSubmit(sendComment)}\n                            shape=\"circle\"\n                            className={classStyle[\"button\"]}\n                          >\n                            <SendOutlined />\n                          </Button>\n                        </div>\n                        {/**User avatar */}\n                      </Col>\n                    )}\n                    {/*Comment section*/}\n                    <Col span={24} className=\"grow flex-col overflow-y-auto\">\n                      <CommentSection\n                        comments={post.comments}\n                        style={{ marginBottom: \"auto\" }}\n                      />\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        ) : (\n          <></>\n        )}\n      </div>\n    </MainLayout>\n  );\n};\n\nconst shareMenu = (\n  <Menu>\n    <Menu.Item key=\"1\" icon={<FacebookFilled style={{ color: \"blue\" }} />}>\n      Facebook\n    </Menu.Item>\n    <Menu.Item key=\"2\" icon={<TwitterCircleFilled style={{ color: \"blue\" }} />}>\n      Twitter\n    </Menu.Item>\n    <Menu.Item key=\"3\" icon={<MailOutlined style={{ color: \"red\" }} />}>\n      Gmail\n    </Menu.Item>\n  </Menu>\n);\n\nconst classStyle = {\n  button: \"w-12 h-12 leading-3 text-base text-[#111] bg-[#e2e2e2] shrink-0\",\n  image: \"w-full h-full object-contain rounded-lg\",\n};\n\nexport default PostDetailScreen;\n"],"names":["LinkOutlined","props","ref","React","AntdIcon","_objectSpread","icon","LinkOutlinedSvg","displayName","shareMenu","_jsxs","Menu","children","_jsx","FacebookFilled","style","color","TwitterCircleFilled","MailOutlined","classStyle","button","image","user","useAppSelector","state","auth","params","useParams","navigate","useNavigate","_useGetPostByIdQuery","useGetPostByIdQuery","postId","post","data","isLoading","isError","isFetching","isSuccess","refetch","_useState","useState","_useState2","_slicedToArray","_useUpdatePostMutatio","useUpdatePostMutation","deletePost","_useCommentPostMutati","useCommentPostMutation","commentMutate","_useLikePostMutation","useLikePostMutation","_useLikePostMutation2","likePost","moreMenu","fontSize","HeartOutlined","_id","Popconfirm","title","description","okText","onConfirm","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","method","unwrap","sent","showMessage","t0","stop","okType","QuestionCircleOutlined","onClick","CloseOutlined","sendComment","_ref2","_callee2","comment","_context2","body","reset","abrupt","message","_x","apply","arguments","_useForm","useForm","resolver","zodResolver","CommentValidatorSchema","defaultValues","handleSubmit","control","errors","formState","handleCopyClick","navigator","clipboard","writeText","concat","API_URL_WEB","handleLike","_callee3","_response$data","_response$data$likes","response","_context3","likes","includes","CommonFullLoading","MainLayout","className","Row","gutter","Col","span","sm","Space","CommonAvatar","size","_Fragment","direction","Typography","strong","fullName","Tooltip","moment","createdAt","fromNow","Dropdown","overlay","trigger","placement","Button","type","shape","ShareAltOutlined","padding","LikeAnimation","like","_modalRef$current","modalRef","show","EditOutlined","EllipsisOutlined","lg","Image","src","URL","fileName","width","height","alt","level","fontWeight","categories","map","category","Tag","getRandomColor","value","Avatar","avatar","Form","Controller","name","render","_ref4","_errors$comment","field","CustomInput2","placeholder","error","SendOutlined","CommentSection","comments","marginBottom"],"sourceRoot":""}
{"version":3,"file":"static/js/107.80a7dc59.chunk.js","mappings":"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","sources":["pages/Collection/CollectionAdd.tsx","components/ImageCard/ImageCard.tsx","components/ImageManager/PinterestLayout.tsx","components/UploadImageModal/UploadImageModal.tsx","components/SearchInput/SearchInput.tsx","components/SlideShow/SlideShow.tsx","pages/CategoryHome/CategoryHome.tsx"],"sourcesContent":["import { CheckOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Grid, Image, Modal, Row, Space } from \"antd\";\nimport Form from \"antd/es/form\";\nimport TextArea from \"antd/es/input/TextArea\";\nimport Typography from \"antd/es/typography\";\nimport Title from \"antd/es/typography/Title\";\nimport images from \"assets/images/images\";\nimport CommonButton from \"components/Button/CommonButton\";\nimport CustomInput2 from \"components/Input/CommonInput2\";\nimport { exists } from \"i18next\";\nimport { url } from \"inspector\";\nimport { User } from \"models/auth.interface\";\nimport { Collection } from \"models/collection.interface\";\nimport { Post } from \"models/post.interrface\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nconst { Text } = Typography;\n\nconst CollectionAdd: any = React.forwardRef((props: any, ref) => {\n  const { user, post, collections = [] } = props;\n  const {\n    handleSubmit,\n    control,\n    formState: { errors },\n    clearErrors,\n  } = useForm();\n  const [addFormVisible, setAddFormVisible] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  React.useImperativeHandle(ref, () => ({\n    show,\n    hide,\n  }));\n\n  const show = () => {\n    setIsModalOpen(true);\n  };\n\n  const hide = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <Modal\n      onCancel={hide}\n      open={isModalOpen}\n      width={896}\n      centered\n      footer={false}\n    >\n      <Row className=\"h-[32rem] overflow-hidden\">\n        <Col sm={0} md={12}>\n          <div className=\"flex\">\n            <Image\n              src={images.mountain}\n              rootClassName=\"w-full h-[32rem]\"\n              alt=\"\"\n            />\n          </div>\n        </Col>\n        <Col sm={24} md={12} className=\"px-8\">\n          <div className=\"w-full flex flex-col gap-4\">\n            <Title level={3} style={{ fontWeight: 700, marginBottom: \"2rem\" }}>\n              Add to Collection\n            </Title>\n            <Button\n              size=\"large\"\n              onClick={() => {\n                setAddFormVisible(true);\n              }}\n            >\n              New Collection\n            </Button>\n            {post?._id &&\n              collections &&\n              collections.map(\n                (collection: {\n                  posts: {\n                    some: (arg0: (postItem: any) => boolean) => any;\n                    length: string;\n                  };\n                  name: any;\n                }) => {\n                  const exist = collection.posts.some(\n                    (postItem: { _id: any }) => postItem._id === post._id,\n                  );\n                  return (\n                    <div\n                      key={post._id}\n                      className=\"p-5 flex flex-col rounded bg-black bg-opacity-25 hover:bg-opacity-50 relative\"\n                      style={exist ? { backgroundColor: \"#8fbc8f\" } : undefined}\n                      onClick={(event) => {\n                        //handleClick();\n                      }}\n                    >\n                      <Text>{collection.posts.length + \" photos\"}</Text>\n                      <Title level={4} style={{ fontWeight: 700, margin: 0 }}>\n                        {collection?.name || \"adadad\"}\n                      </Title>\n                      <div className=\"text-lg absolute top-6 right-5\">\n                        {exist ? <CheckOutlined /> : <PlusOutlined />}\n                      </div>\n                    </div>\n                  );\n                },\n              )}\n          </div>\n          {/**Collection Add Form*/}\n          {addFormVisible && (\n            <div className=\"absolute top-0 left-0 w-full h-full px-8 bg-white z-20\">\n              <Form className=\"flex flex-col h-full\">\n                <Title\n                  level={3}\n                  style={{ fontWeight: 700, marginBottom: \"2rem\" }}\n                >\n                  Create new collection\n                </Title>\n                <Form.Item className=\"mb-0\">\n                  <Controller\n                    control={control}\n                    name=\"name\"\n                    render={({ field }) => (\n                      <CustomInput2\n                        label=\"Name\"\n                        {...field}\n                        placeholder=\"Collection name\"\n                        //error={errors.email?.message}\n                      />\n                    )}\n                  />\n                </Form.Item>\n                <Form.Item className=\"mb-0\">\n                  <Typography.Text\n                    className=\"text-base inline-block mb-1 pr-1\"\n                    strong\n                  >\n                    Description\n                  </Typography.Text>\n                  <Controller\n                    name=\"content\"\n                    control={control}\n                    render={({ field }) => (\n                      <TextArea\n                        rows={4}\n                        placeholder=\"Describe your collection\"\n                        maxLength={200}\n                      />\n                    )}\n                  />\n                </Form.Item>\n                <div className=\"flex justify-around gap-12 mt-auto\">\n                  <CommonButton\n                    onClick={() => {\n                      setAddFormVisible(false);\n                    }}\n                  >\n                    Cancel\n                  </CommonButton>\n                  <CommonButton\n                    type=\"primary\"\n                    className=\"bg-[#1677ff] hover:bg-[#4090ff]\"\n                  >\n                    Create collection\n                  </CommonButton>\n                </div>\n              </Form>\n            </div>\n          )}\n        </Col>\n      </Row>\n    </Modal>\n  );\n});\n\nexport default CollectionAdd;\n","import {\n  DownloadOutlined,\n  FullscreenOutlined,\n  HeartOutlined,\n} from \"@ant-design/icons\";\nimport { Image } from \"antd\";\nimport CommonButton from \"components/Button/CommonButton\";\nimport { Post } from \"models/post.interrface\";\nimport CollectionAdd from \"pages/Collection/CollectionAdd\";\nimport { postDetailRef } from \"Provider/GlobalUiContainer\";\nimport React, { useRef } from \"react\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\nconst ImageCardCommon: React.FC<{\n  value: Post;\n  scrollPosition: any;\n}> = ({ value, scrollPosition }) => {\n  const { _id, fileName, URL } = value;\n  const collectionRef = useRef<any>();\n  return (\n    <>\n      <div key={_id} className=\"rounded-lg m-5\">\n        <div className=\"relative group\">\n          <LazyLoadImage\n            src={URL || fileName}\n            alt={value.title}\n            scrollPosition={scrollPosition}\n            effect=\"blur\"\n            className=\"rounded-lg w-full h-full object-cover\"\n          />\n          <div\n            onClick={(e) => {\n              if (e.target === e.currentTarget) {\n                postDetailRef.current?.show(value);\n              }\n            }}\n            className=\"absolute top-0 rounded-lg left-0 w-full h-full bg-black overflow-hidden opacity-0 bg-opacity-20 transition-opacity duration-100 group-hover:opacity-100 group\"\n          >\n            <div className=\"absolute -top-12 left-4 transform transition-transform duration-300 group-hover:translate-y-16\">\n              <CommonButton\n                type=\"primary\"\n                size=\"large\"\n                className=\"bg-black bg-opacity-50\"\n                style={{ lineHeight: 0 }}\n                title=\"View\"\n                icon={<FullscreenOutlined />}\n                onClick={() => {\n                  postDetailRef.current?.show(value);\n                }}\n              />\n            </div>\n            <div className=\"absolute top-4 -right-12 flex flex-col gap-2 transform transition-transform duration-300 group-hover:-translate-x-16\">\n              <CommonButton\n                type=\"primary\"\n                size=\"large\"\n                className=\"bg-black bg-opacity-50\"\n                style={{ lineHeight: 0 }}\n                icon={<HeartOutlined />}\n              />\n              <CommonButton\n                type=\"primary\"\n                size=\"large\"\n                className=\"bg-black bg-opacity-50\"\n                style={{ lineHeight: 0 }}\n                icon={<DownloadOutlined />}\n                onClick={() => {\n                  postDetailRef.current.downloadImage(URL, fileName);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <CollectionAdd ref={collectionRef} />\n    </>\n  );\n};\n\nexport default ImageCardCommon;\n","import ImageCardCommon from \"components/ImageCard/ImageCard\";\nimport { Post } from \"models/post.interrface\";\nimport React from \"react\";\nimport { trackWindowScroll } from \"react-lazy-load-image-component\";\nimport Lottie from \"lottie-react\";\n\nimport Masonry from \"react-masonry-css\";\nimport images from \"assets/images/images\";\nimport { Col, Typography } from \"antd\";\nconst breakpointColumnsObj = {\n  default: 4,\n  1100: 3,\n  700: 2,\n  500: 1,\n};\nconst PinterestLayout: React.FunctionComponent<any> = ({\n  data = [],\n  scrollPosition,\n}) => {\n  return (\n    <Masonry\n      breakpointCols={breakpointColumnsObj}\n      className=\"flex justify-center\"\n    >\n      {data.length > 0 ? (\n        data?.map((item: Post) => (\n          <ImageCardCommon\n            value={item}\n            key={item._id}\n            scrollPosition={scrollPosition}\n          />\n        ))\n      ) : (\n        <Col>\n          <Lottie\n            animationData={images.emptycat}\n            className=\"w-128 h-128 justify-center items-center\"\n          />\n          <Typography.Text\n            className=\"mb-2 text-xl text-center\"\n            style={{\n              display: \"block\",\n            }}\n          >\n            No related post images found.\n          </Typography.Text>\n          <Typography.Text\n            style={{\n              display: \"block\",\n            }}\n            className=\"text-gray-500 text-xl text-center\"\n          >\n            Please upload more for the next time!\n          </Typography.Text>\n        </Col>\n      )}\n    </Masonry>\n  );\n};\nexport default trackWindowScroll(PinterestLayout);\n","import { CloudUploadOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Image, Modal, Row, Upload } from \"antd\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useCreatePostMutation } from \"redux/api/postApi\";\nimport { showMessage } from \"utils/toast\";\n\nconst UploadImageModal = React.forwardRef((props: any, ref) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [createPostMutate, result] = useCreatePostMutation();\n\n  const {\n    handleSubmit,\n    control,\n    formState: { errors },\n    clearErrors,\n  } = useForm();\n  React.useImperativeHandle(ref, () => ({\n    show,\n    hide,\n  }));\n\n  const show = () => {\n    setIsModalOpen(true);\n  };\n\n  const hide = () => {\n    setSelectedImage(null);\n    setIsModalOpen(false);\n  };\n  const handleImageUpload = (file: any) => {\n    const reader: any = new FileReader();\n    reader.onload = () => {\n      setSelectedImage(reader.result);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const handleImageRemove = () => {\n    setSelectedImage(null);\n  };\n\n  const customRequest = ({ file }: { file: any }) => {\n    const isImage = file.type.startsWith(\"image/\");\n    if (!isImage) {\n      showMessage(\"Only image files are allowed.\", \"error\");\n      return;\n    }\n    handleImageUpload(file);\n  };\n  const onSubmit = async (formData: any) => {\n    //\n  };\n  return (\n    <>\n      <Modal onCancel={hide} open={isModalOpen} width={640} footer={false}>\n        <Row className=\"justify-center\" gutter={16}>\n          <Col sm={24} className=\"h-96 mt-8\">\n            {selectedImage ? (\n              <Image\n                src={selectedImage}\n                width={\"100%\"}\n                height={\"100%\"}\n                alt=\"Selected\"\n                className=\"mt-auto object-contain\"\n              />\n            ) : (\n              <Upload.Dragger\n                showUploadList={false}\n                customRequest={customRequest}\n                onRemove={handleImageRemove}\n                className=\"block h-full bg-gray-200 border-2 border-dashed border-gray-400 rounded-lg text-center\"\n              >\n                <>\n                  <CloudUploadOutlined className=\"text-4xl mb-4\" />\n                  <p className=\"text-gray-600 text-lg\">\n                    Drag and drop your files here or click to browse\n                  </p>\n                </>\n              </Upload.Dragger>\n            )}\n          </Col>\n          <Col sm={16} className=\"mt-4\">\n            <Button type=\"primary\" className=\"w-full bg-[#1677ff]\">\n              Find\n            </Button>\n          </Col>\n          <Col sm={8} className=\"mt-4\">\n            <Button\n              className=\"w-full\"\n              onClick={() => {\n                handleImageRemove();\n              }}\n            >\n              Clear\n            </Button>\n          </Col>\n        </Row>\n      </Modal>\n    </>\n  );\n});\n\nexport default UploadImageModal;\n","import { Input } from \"antd\";\nimport React, { useRef } from \"react\";\n\nimport {\n  SearchOutlined,\n  HeartOutlined,\n  CameraOutlined,\n} from \"@ant-design/icons\";\nimport styled from \"styled-components\";\nimport UploadImageModal from \"components/UploadImageModal/UploadImageModal\";\n\nfunction SearchInput(props: any): JSX.Element {\n  const imageInputRef = useRef<any>();\n\n  return (\n    <>\n      <Input\n        placeholder=\"Search high resolution images\"\n        prefix={<SearchOutlined />}\n        suffix={\n          <CameraOutlined\n            onClick={() => {\n              imageInputRef.current.show();\n            }}\n          />\n        }\n        className={\"w-full p-2 rounded-full px-5 border-[#eee] border\"}\n        {...props}\n      />\n      <UploadImageModal ref={imageInputRef} />\n    </>\n  );\n}\n\nexport default SearchInput;\n","import React, { ReactNode } from \"react\";\nimport { Avatar, Carousel } from \"antd\";\nimport * as imgs from \"assets/images/images\";\n\ninterface SlideShowProps {\n  images?: any[];\n  children?: any;\n}\n\nconst tempImages = [\n  \"https://images.pexels.com/photos/1402787/pexels-photo-1402787.jpeg?auto=compress&cs=tinysrgb\",\n  \"https://images.pexels.com/photos/842711/pexels-photo-842711.jpeg?auto=compress&cs=tinysrgb\",\n  \"https://images.pexels.com/photos/1450360/pexels-photo-1450360.jpeg?auto=compress&cs=tinysrgb\",\n  \"https://images.pexels.com/photos/15286/pexels-photo.jpg\",\n  \"https://images.pexels.com/photos/1486976/pexels-photo-1486976.jpeg?auto=compress&cs=tinysrgb\",\n];\n\nconst SlideShow: React.FC<SlideShowProps> = (props) => {\n  const { images = tempImages, children } = props;\n\n  return (\n    <Carousel autoplay>\n      {images.map((image, idx) => {\n        return (\n          <div className=\"w-full h-[580px] md:h-[520px] xs:h-[480px]\" key={idx}>\n            <img\n              className=\"w-full h-full object-cover\"\n              src={image}\n              loading=\"lazy\"\n            />\n          </div>\n        );\n      })}\n    </Carousel>\n  );\n};\n\nexport default SlideShow;\n","import { Typography } from \"antd\";\nimport images from \"assets/images/images\";\nimport PinterestLayout from \"components/ImageManager/PinterestLayout\";\nimport CommonFullLoading from \"components/Loading/Loading\";\nimport SearchInput from \"components/SearchInput/SearchInput\";\nimport SlideShow from \"components/SlideShow/SlideShow\";\nimport { usePostsQuery } from \"hooks/usePostsQuery\";\nimport MainLayout from \"layout/MainLayout\";\nimport Lottie from \"lottie-react\";\n\nimport * as React from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { useParams } from \"react-router\";\nimport { useGetPostByCategoryQuery } from \"redux/api/postApi\";\ninterface ICategoryHomeProps {\n  id?: any;\n}\n\nconst CategoryHome: React.FunctionComponent<ICategoryHomeProps> = (props) => {\n  const params = useParams();\n  const { data, refetch } = useGetPostByCategoryQuery({\n    category: params?.category,\n  });\n  return (\n    <MainLayout>\n      <div className=\"w-full h-[580px] md:h-[520px] xs:h-[480px] bg-center  flex justify-center items-center relative\">\n        <div className=\"w-full h-full absolute top-0 left-0\">\n          <SlideShow />\n        </div>\n\n        <div className=\" self-center flex-1 max-w-xl max-sm:px-5 z-10\">\n          <Typography className=\"text-white font-bold text-5xl\">\n            Kma Splash\n          </Typography>\n          <Typography className=\"text-white font-normal w-80 text-lg my-5\">\n            The internet’s source for visuals. Powered by creators everywhere.\n          </Typography>\n          <SearchInput\n            className={\n              \"w-full p-2 rounded px-5 text-lg py-3 border-[#eee] border max-sm:hidden\"\n            }\n          />\n        </div>\n      </div>\n\n      <PinterestLayout data={data || []} />\n    </MainLayout>\n  );\n};\n\nexport default CategoryHome;\n"],"names":["Text","Typography","React","props","ref","user","post","_props$collections","collections","_useForm","useForm","control","handleSubmit","_useState","formState","errors","clearErrors","useState","_useState2","_slicedToArray","addFormVisible","setAddFormVisible","_useState3","_useState4","isModalOpen","setIsModalOpen","show","hide","_jsx","Modal","onCancel","open","width","centered","footer","children","_jsxs","Row","className","Col","sm","md","Image","src","images","rootClassName","alt","Title","level","style","fontWeight","marginBottom","Button","size","onClick","_id","map","collection","exist","posts","some","postItem","backgroundColor","undefined","event","length","margin","name","CheckOutlined","PlusOutlined","Form","Controller","render","_ref","field","CustomInput2","_objectSpread","label","placeholder","strong","_ref2","TextArea","rows","maxLength","CommonButton","type","value","scrollPosition","fileName","URL","collectionRef","useRef","_Fragment","LazyLoadImage","title","effect","e","_postDetailRef$curren","target","currentTarget","postDetailRef","lineHeight","icon","FullscreenOutlined","_postDetailRef$curren2","HeartOutlined","DownloadOutlined","CollectionAdd","breakpointColumnsObj","default","trackWindowScroll","_ref$data","data","Masonry","breakpointCols","item","ImageCardCommon","Lottie","animationData","display","selectedImage","setSelectedImage","_useCreatePostMutatio","useCreatePostMutation","_useCreatePostMutatio2","handleImageRemove","gutter","height","Upload","showUploadList","customRequest","file","startsWith","reader","FileReader","onload","result","readAsDataURL","handleImageUpload","showMessage","onRemove","CloudUploadOutlined","imageInputRef","Input","prefix","SearchOutlined","suffix","CameraOutlined","current","UploadImageModal","tempImages","_props$images","Carousel","autoplay","image","idx","loading","params","useParams","_useGetPostByCategory","useGetPostByCategoryQuery","category","refetch","MainLayout","SlideShow","SearchInput","PinterestLayout"],"sourceRoot":""}
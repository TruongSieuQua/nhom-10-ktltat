{"version":3,"file":"static/js/569.2620aeb2.chunk.js","mappings":"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","sources":["components/UploadImageModal/UploadImageModal.tsx","components/SearchInput/SearchInput.tsx","components/SlideShow/SlideShow.tsx","pages/Home/Home.tsx"],"sourcesContent":["import { CloudUploadOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Image, Modal, Row, Upload } from \"antd\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useCreatePostMutation } from \"redux/api/postApi\";\nimport { showMessage } from \"utils/toast\";\n\nconst UploadImageModal = React.forwardRef((props: any, ref) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [createPostMutate, result] = useCreatePostMutation();\n\n  const {\n    handleSubmit,\n    control,\n    formState: { errors },\n    clearErrors,\n  } = useForm();\n  React.useImperativeHandle(ref, () => ({\n    show,\n    hide,\n  }));\n\n  const show = () => {\n    setIsModalOpen(true);\n  };\n\n  const hide = () => {\n    setSelectedImage(null);\n    setIsModalOpen(false);\n  };\n  const handleImageUpload = (file: any) => {\n    const reader: any = new FileReader();\n    reader.onload = () => {\n      setSelectedImage(reader.result);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const handleImageRemove = () => {\n    setSelectedImage(null);\n  };\n\n  const customRequest = ({ file }: { file: any }) => {\n    const isImage = file.type.startsWith(\"image/\");\n    if (!isImage) {\n      showMessage(\"Only image files are allowed.\", \"error\");\n      return;\n    }\n    handleImageUpload(file);\n  };\n  const onSubmit = async (formData: any) => {\n    //\n  };\n  return (\n    <>\n      <Modal onCancel={hide} open={isModalOpen} width={640} footer={false}>\n        <Row className=\"justify-center\" gutter={16}>\n          <Col sm={24} className=\"h-96 mt-8\">\n            {selectedImage ? (\n              <Image\n                src={selectedImage}\n                width={\"100%\"}\n                height={\"100%\"}\n                alt=\"Selected\"\n                className=\"mt-auto object-contain\"\n              />\n            ) : (\n              <Upload.Dragger\n                showUploadList={false}\n                customRequest={customRequest}\n                onRemove={handleImageRemove}\n                className=\"block h-full bg-gray-200 border-2 border-dashed border-gray-400 rounded-lg text-center\"\n              >\n                <>\n                  <CloudUploadOutlined className=\"text-4xl mb-4\" />\n                  <p className=\"text-gray-600 text-lg\">\n                    Drag and drop your files here or click to browse\n                  </p>\n                </>\n              </Upload.Dragger>\n            )}\n          </Col>\n          <Col sm={16} className=\"mt-4\">\n            <Button type=\"primary\" className=\"w-full bg-[#1677ff]\">\n              Find\n            </Button>\n          </Col>\n          <Col sm={8} className=\"mt-4\">\n            <Button\n              className=\"w-full\"\n              onClick={() => {\n                handleImageRemove();\n              }}\n            >\n              Clear\n            </Button>\n          </Col>\n        </Row>\n      </Modal>\n    </>\n  );\n});\n\nexport default UploadImageModal;\n","import { Input } from \"antd\";\nimport React, { useRef } from \"react\";\n\nimport {\n  SearchOutlined,\n  HeartOutlined,\n  CameraOutlined,\n} from \"@ant-design/icons\";\nimport styled from \"styled-components\";\nimport UploadImageModal from \"components/UploadImageModal/UploadImageModal\";\n\nfunction SearchInput(props: any): JSX.Element {\n  const imageInputRef = useRef<any>();\n\n  return (\n    <>\n      <Input\n        placeholder=\"Search high resolution images\"\n        prefix={<SearchOutlined />}\n        suffix={\n          <CameraOutlined\n            onClick={() => {\n              imageInputRef.current.show();\n            }}\n          />\n        }\n        className={\"w-full p-2 rounded-full px-5 border-[#eee] border\"}\n        {...props}\n      />\n      <UploadImageModal ref={imageInputRef} />\n    </>\n  );\n}\n\nexport default SearchInput;\n","import React, { ReactNode } from \"react\";\nimport { Avatar, Carousel } from \"antd\";\nimport * as imgs from \"assets/images/images\";\n\ninterface SlideShowProps {\n  images?: any[];\n  children?: any;\n}\n\nconst tempImages = [\n  \"https://images.pexels.com/photos/1402787/pexels-photo-1402787.jpeg?auto=compress&cs=tinysrgb\",\n  \"https://images.pexels.com/photos/842711/pexels-photo-842711.jpeg?auto=compress&cs=tinysrgb\",\n  \"https://images.pexels.com/photos/1450360/pexels-photo-1450360.jpeg?auto=compress&cs=tinysrgb\",\n  \"https://images.pexels.com/photos/15286/pexels-photo.jpg\",\n  \"https://images.pexels.com/photos/1486976/pexels-photo-1486976.jpeg?auto=compress&cs=tinysrgb\",\n];\n\nconst SlideShow: React.FC<SlideShowProps> = (props) => {\n  const { images = tempImages, children } = props;\n\n  return (\n    <Carousel autoplay>\n      {images.map((image, idx) => {\n        return (\n          <div className=\"w-full h-[580px] md:h-[520px] xs:h-[480px]\" key={idx}>\n            <img\n              className=\"w-full h-full object-cover\"\n              src={image}\n              loading=\"lazy\"\n            />\n          </div>\n        );\n      })}\n    </Carousel>\n  );\n};\n\nexport default SlideShow;\n","import { Typography } from \"antd\";\nimport images from \"assets/images/images\";\nimport PinterestLayout from \"components/ImageManager/PinterestLayout\";\nimport SearchInput from \"components/SearchInput/SearchInput\";\nimport SlideShow from \"components/SlideShow/SlideShow\";\nimport MainLayout from \"layout/MainLayout\";\nimport Lottie from \"lottie-react\";\n\nimport * as React from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport {\n  postsAdapter,\n  postsSelector,\n  useGetAllPostsQuery,\n} from \"redux/api/postApi\";\ninterface IHomeProps {\n  id?: any;\n}\n\nconst Home: React.FunctionComponent<IHomeProps> = (props) => {\n  const [page, setPage] = React.useState(1);\n  const { data, refetch } = useGetAllPostsQuery(\n    {\n      page,\n    },\n    {\n      selectFromResult: ({ data, ...otherParams }) => {\n        return {\n          data: postsSelector.selectAll(data ?? postsAdapter.getInitialState()),\n          ...otherParams,\n        };\n      },\n    },\n  );\n\n  return (\n    <MainLayout>\n      <div className=\"w-full h-[580px] md:h-[520px] xs:h-[480px] bg-center  flex justify-center items-center relative\">\n        <div className=\"w-full h-full absolute top-0 left-0\">\n          <SlideShow />\n        </div>\n\n        <div className=\" self-center flex-1 max-w-xl max-sm:px-5 z-10\">\n          <Typography className=\"text-white font-bold text-5xl\">\n            Kma Splash\n          </Typography>\n          <Typography className=\"text-white font-normal w-80 text-lg my-5\">\n            The internet’s source for visuals. Powered by creators everywhere.\n          </Typography>\n          <SearchInput\n            className={\n              \"w-full p-2 rounded px-5 text-lg py-3 border-[#eee] border max-sm:hidden\"\n            }\n          />\n        </div>\n      </div>\n      {data && (\n        <InfiniteScroll\n          dataLength={data?.length || 0} //This is important field to render the next data\n          next={() => {\n            setPage((page) => page + 1);\n          }}\n          hasMore={true}\n          loader={\n            <Lottie animationData={images.catLoading} className=\"w-36 h-36 \" />\n          }\n          refreshFunction={refetch}\n          pullDownToRefresh\n          pullDownToRefreshThreshold={50}\n        >\n          <PinterestLayout data={data || []} />\n        </InfiniteScroll>\n      )}\n    </MainLayout>\n  );\n};\n\nexport default Home;\n"],"names":["React","props","ref","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","_useState3","_useState4","selectedImage","setSelectedImage","_useCreatePostMutatio","useCreatePostMutation","_useCreatePostMutatio2","_useForm","useForm","handleSubmit","control","formState","errors","clearErrors","show","hide","handleImageRemove","_jsx","_Fragment","children","Modal","onCancel","open","width","footer","_jsxs","Row","className","gutter","Col","sm","Image","src","height","alt","Upload","showUploadList","customRequest","_ref","file","type","startsWith","reader","FileReader","onload","result","readAsDataURL","handleImageUpload","showMessage","onRemove","CloudUploadOutlined","Button","onClick","imageInputRef","useRef","Input","_objectSpread","placeholder","prefix","SearchOutlined","suffix","CameraOutlined","current","UploadImageModal","tempImages","_props$images","images","Carousel","autoplay","map","image","idx","loading","_React$useState","_React$useState2","page","setPage","_useGetAllPostsQuery","useGetAllPostsQuery","selectFromResult","data","otherParams","_objectWithoutProperties","_excluded","postsSelector","postsAdapter","refetch","MainLayout","SlideShow","Typography","SearchInput","InfiniteScroll","dataLength","length","next","hasMore","loader","Lottie","animationData","refreshFunction","pullDownToRefresh","pullDownToRefreshThreshold","PinterestLayout"],"sourceRoot":""}
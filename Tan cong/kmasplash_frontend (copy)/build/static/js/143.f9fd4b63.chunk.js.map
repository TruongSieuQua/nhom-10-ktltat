{"version":3,"file":"static/js/143.f9fd4b63.chunk.js","mappings":"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","sources":["components/Button/CommonButton.tsx","components/Input/CommonInput2.tsx","pages/Account/ChangePassword.tsx","pages/Account/Layout.tsx","redux/api/authApi.ts","utils/toast.ts","validators/Auth.validators.ts"],"sourcesContent":["import { Button } from \"antd\";\nimport styled from \"styled-components\";\n\nconst CommonButton = styled(Button)`\n  width: 100%;\n  height: 3rem;\n`;\n\nexport default CommonButton;\n","import React from \"react\";\nimport { Input, Form, Typography, InputProps } from \"antd\";\n\ninterface CustomInputProps extends InputProps {\n  label?: string;\n  error?: string;\n}\n\nconst CustomInput2: React.FC<CustomInputProps> = ({\n  label,\n  error,\n  ...rest\n}) => {\n  return (\n    <>\n      {label && (\n        <Typography.Text className=\"text-base inline-block mb-1 pr-1\" strong>\n          {label}\n        </Typography.Text>\n      )}\n      <Form.Item\n        className=\"flex-column\"\n        validateStatus={error ? \"error\" : \"\"}\n        help={<Typography.Text type=\"danger\">{error}</Typography.Text>}\n      >\n        <Input size=\"large\" {...rest} />\n      </Form.Item>\n    </>\n  );\n};\n\nexport default CustomInput2;\n","import { zodResolver } from \"@hookform/resolvers/zod\";\nimport Form from \"antd/es/form\";\nimport Title from \"antd/es/typography/Title\";\nimport CommonButton from \"components/Button/CommonButton\";\nimport CustomInput2 from \"components/Input/CommonInput2\";\nimport { TError } from \"models/Error.interface\";\nimport * as React from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useChangePasswordMutation } from \"redux/api/authApi\";\nimport { showMessage } from \"utils/toast\";\nimport {\n  ChangePasswordFormData,\n  ChangePasswordFormSchema,\n} from \"validators/Auth.validators\";\nimport Layout from \"./Layout\";\n\ninterface ChangePasswordProps {\n  id?: string;\n}\n\nconst ChangePassword: React.FunctionComponent<ChangePasswordProps> = (\n  props,\n) => {\n  const [chPasswordMutate, chPasswordResult] = useChangePasswordMutation();\n\n  const {\n    handleSubmit,\n    control,\n    formState: { errors },\n  } = useForm<ChangePasswordFormData>({\n    resolver: zodResolver(ChangePasswordFormSchema),\n    defaultValues: {\n      password: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n    },\n  });\n  const onSubmit = async (formData: ChangePasswordFormData) => {\n    try {\n      const response = await chPasswordMutate({\n        password: formData.password,\n        newPassword: formData.newPassword,\n      }).unwrap();\n      showMessage(\"Change password successfully\", \"success\");\n      // navigate(\"/\");\n    } catch (error: TError | any) {\n      // showToastError(error);\n\n      showMessage(error.data.message, \"error\");\n    }\n  };\n  return (\n    <Layout>\n      <div>\n        <Title level={4} style={{ fontWeight: 700, marginBottom: \"2rem\" }}>\n          Change password\n        </Title>\n        <Form>\n          <div className=\"flex flex-col\">\n            <Form.Item className=\"mb-0\">\n              <Controller\n                control={control}\n                name=\"password\"\n                render={({ field }) => (\n                  <CustomInput2\n                    label=\"Current password\"\n                    type=\"password\"\n                    {...field}\n                    error={errors.password?.message}\n                  />\n                )}\n              />\n            </Form.Item>\n            <Form.Item className=\"mb-0\">\n              <Controller\n                control={control}\n                name=\"newPassword\"\n                render={({ field }) => (\n                  <CustomInput2\n                    label=\"New password\"\n                    type=\"password\"\n                    {...field}\n                    error={errors.newPassword?.message}\n                  />\n                )}\n              />\n            </Form.Item>\n            <Form.Item className=\"mb-0\">\n              <Controller\n                control={control}\n                name=\"confirmPassword\"\n                render={({ field }) => (\n                  <CustomInput2\n                    label=\"Password confirmation\"\n                    type=\"password\"\n                    {...field}\n                    error={errors.confirmPassword?.message}\n                  />\n                )}\n              />\n            </Form.Item>\n\n            <CommonButton\n              onClick={handleSubmit(onSubmit)}\n              type=\"primary\"\n              className=\"bg-[#1677ff] hover:bg-[#4090ff]\"\n            >\n              Change password\n            </CommonButton>\n          </div>\n        </Form>\n      </div>\n    </Layout>\n  );\n};\n\nexport default ChangePassword;\n","import { Dropdown, MenuProps, Image, Space, Avatar } from \"antd\";\nimport Title from \"antd/es/typography/Title\";\nimport images from \"assets/images/images\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\n\ninterface AccountProps {\n  id?: string;\n  children?: React.ReactNode;\n}\n\nconst Account: React.FunctionComponent<AccountProps> = ({ children }) => {\n  const navigate = useNavigate();\n  const [selectedUrlPath, setSelectedUrlPath] = useState(\n    window.location.pathname,\n  );\n  const updateSelectedUrlPath = (path: string) => {\n    setSelectedUrlPath(path);\n  };\n\n  return (\n    <div className=\"w-full\">\n      <Space className=\"w-full h-16 justify-between px-5 bg-white fixed top-0 left-0 z-10\">\n        <Link to=\"/home\">\n          <Avatar src={images.loginIcon} size={54} />\n        </Link>\n        <Space className=\"w-16 h-16\"></Space>\n        <Dropdown menu={{ items }} trigger={[\"click\"]} placement=\"bottomRight\">\n          <Avatar src={images.mountain} size={48} />\n        </Dropdown>\n      </Space>\n      <div className=\"mx-[auto] flex sm:flex-col md:flex-row pt-32\">\n        <div className=\"sm:text-center md:text-left md:basis-1/4 px-3 mb-6\">\n          <div className=\"w-full\">\n            <Title level={4} style={{ fontWeight: 700, marginBottom: \"2rem\" }}>\n              Account settings\n            </Title>\n            <Space.Compact direction=\"vertical\">\n              {navLinks.map((link) => {\n                return (\n                  <Link\n                    key={link.id}\n                    to={link.to}\n                    className={classStyle[\"link\"]}\n                    style={\n                      link.to === selectedUrlPath\n                        ? { color: \"#111\", textDecoration: \"underline\" }\n                        : undefined\n                    }\n                    onClick={() => {\n                      updateSelectedUrlPath(link.to);\n                    }}\n                  >\n                    {link.title}\n                  </Link>\n                );\n              })}\n            </Space.Compact>\n          </div>\n        </div>\n        <div className=\"md:basis-3/4 px-3 mb-16\">{children}</div>\n      </div>\n    </div>\n  );\n};\n\nconst classStyle = {\n  link: \"w-full text-[#767676] p-2 hover:text-[#111]\",\n};\n\nconst items: MenuProps[\"items\"] = [\n  {\n    key: \"1\",\n    label: <Link to=\"/profile\">View profile</Link>,\n  },\n  {\n    key: \"2\",\n    label: <Link to=\"/profile\">Stats</Link>,\n  },\n  {\n    key: \"3\",\n    label: <Link to=\"/account\">Account settings</Link>,\n  },\n  {\n    key: \"4\",\n    label: <button className=\"\">Logout</button>,\n  },\n];\n\nconst navLinks = [\n  {\n    id: \"profile\",\n    to: \"/account\",\n    title: \"Edit profile\",\n  },\n  {\n    id: \"hiring\",\n    to: \"/account/hiring\",\n    title: \"Hiring\",\n  },\n  {\n    id: \"d-history\",\n    to: \"/account/downloads\",\n    title: \"Download history\",\n  },\n  {\n    id: \"e-settings\",\n    to: \"/account/settings\",\n    title: \"Email settings\",\n  },\n  {\n    id: \"chg-password\",\n    to: \"/account/password\",\n    title: \"Change password\",\n  },\n  {\n    id: \"connect\",\n    to: \"/account/connect\",\n    title: \"Connect accounts\",\n  },\n  {\n    id: \"application\",\n    to: \"/account/application\",\n    title: \"Application\",\n  },\n  {\n    id: \"close-account\",\n    to: \"/account/disable\",\n    title: \"Close account\",\n  },\n];\n\nexport default Account;\n","// https://redux.js.org/tutorials/essentials/part-8-rtk-query-advanced#injecting-endpoints\n\nimport {\n  ChangePassword,\n  SignInRequest,\n  SignInResponse,\n  SignUpRequest,\n  UpdateProfile,\n  User,\n} from \"models/auth.interface\";\nimport { baseApi } from \"services/baseApi\";\n\nconst signUpUrl = \"auth/register\";\nconst login = \"auth/login\";\nconst logOut = \"auth/logout\";\n\nconst changePassword = \"auth/change-password\";\nconst updateProfileUrl = \"user/\";\n\nexport const authApi = baseApi.injectEndpoints({\n  endpoints: (builder) => ({\n    signUp: builder.mutation<SignInResponse, SignUpRequest>({\n      query: (body) => ({\n        url: signUpUrl,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    signIn: builder.mutation<SignInResponse, SignInRequest>({\n      query: (body) => ({\n        url: login,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    logOut: builder.mutation({\n      query: () => ({\n        url: logOut,\n        method: \"POST\",\n      }),\n    }),\n    updateProfile: builder.mutation<User, UpdateProfile>({\n      query: ({ ...patch }) => ({\n        url: updateProfileUrl,\n        method: \"PATCH\",\n        body: patch,\n      }),\n      invalidatesTags: [\"Profile\"],\n      transformErrorResponse: (response: any) => {\n        return response.data;\n      },\n    }),\n    changePassword: builder.mutation<User, ChangePassword>({\n      query: (body) => ({\n        url: changePassword,\n        method: \"POST\",\n        body,\n      }),\n      transformErrorResponse: (response: any) => {\n        return response.data;\n      },\n    }),\n    getUserProfile: builder.query<User, any>({\n      query: (userid) => ({\n        url: updateProfileUrl + userid,\n      }),\n      providesTags: [\"Profile\"],\n    }),\n  }),\n  overrideExisting: true,\n});\n\nexport const {\n  useSignInMutation,\n  useSignUpMutation,\n  useUpdateProfileMutation,\n\n  useLogOutMutation,\n  useChangePasswordMutation,\n  useGetUserProfileQuery,\n} = authApi;\n","import { toast, ToastPosition, TypeOptions } from \"react-toastify\";\n\nexport const showMessage = (\n  message: string,\n  type: TypeOptions = \"success\",\n  position: ToastPosition = \"bottom-right\",\n  className?: string,\n): void => {\n  toast(message, {\n    position,\n    className,\n    type,\n  });\n};\n","import { z } from \"zod\";\nconst REGEXP_PASSWORD_RULE: string | RegExp =\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d@$!%*#?&]{6,}$/;\n\nconst passwordSchema = z\n  .string()\n  .min(6, { message: \"Must be 6 or more characters long\" })\n  .max(30, { message: \"Must be 30 or less characters long\" })\n  .regex(REGEXP_PASSWORD_RULE, {\n    message: \"Must contain lowercase, uppercase, digit and special character\",\n  });\n\n/// sign In\nexport const SignInFormSchema = z.object({\n  email: z\n    .string()\n    .min(5, { message: \"Invalid Email\" })\n    .email({ message: \"Invalid Email\" }),\n  password: passwordSchema,\n});\n\nexport type SignInFormData = z.infer<typeof SignInFormSchema>;\n// sign up\n\nexport const SignUpFormSchema = SignInFormSchema.extend({\n  fullName: z\n    .string()\n    .min(3, { message: \"Must be 3 or more characters long\" })\n    .max(50, { message: \"Must be 50 or less characters long\" })\n    .regex(/^[\\p{L}\\s\\p{Lo}]+$/u, \"Invalid name format\"),\n});\n\nexport type SignUpFormData = z.infer<typeof SignUpFormSchema>;\n\nexport const UpdateAuthSchema = z.object({\n  fullName: z.optional(z.string()),\n  avatar: z.optional(z.string()),\n  bio: z.optional(z.string()),\n  userName: z.optional(\n    z\n      .string()\n      .min(2)\n      .max(30)\n      .regex(/[\\w\\d_]+$/, {\n        message: \"Username can only contain letters, numbers, and underscores!\",\n      }),\n  ),\n  portfolio: z.optional(z.string()),\n  facebookId: z.optional(z.string()),\n  instagramId: z.optional(z.string()),\n  location: z.optional(z.string()),\n});\nexport type UpdateAuthFormData = z.infer<typeof UpdateAuthSchema>;\n\nexport const ChangePasswordFormSchema = z\n  .object({\n    password: passwordSchema,\n    newPassword: passwordSchema,\n    confirmPassword: passwordSchema,\n  })\n  .refine(\n    (data) => {\n      return data.newPassword === data.confirmPassword;\n    },\n    {\n      message: \"Mat khau khong khop\",\n      path: [\"confirmPassword\"],\n    },\n  );\n// .refine(\n//   (data) => {\n//     // const pattern = new RegExp(REGEXP_PASSWORD_RULE);\n\n//     return pattern.test(data.newPassword);\n//   },\n//   {\n//     message: \"Mat khuan phai co 8 ky tu\",\n//     path: [\"newPassword\"],\n//   },\n// );\n\nexport type ChangePasswordFormData = z.infer<typeof ChangePasswordFormSchema>;\n"],"names":["CommonButton","styled","Button","_templateObject","_taggedTemplateLiteral","_ref","label","error","rest","_objectWithoutProperties","_excluded","_jsxs","_Fragment","children","_jsx","Typography","className","strong","Form","validateStatus","help","type","Input","_objectSpread","size","props","_useChangePasswordMut","useChangePasswordMutation","_useChangePasswordMut2","_slicedToArray","chPasswordMutate","_useForm","useForm","resolver","zodResolver","ChangePasswordFormSchema","defaultValues","password","newPassword","confirmPassword","handleSubmit","control","errors","formState","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","wrap","_context","prev","next","unwrap","sent","showMessage","t0","data","message","stop","_x","apply","arguments","Layout","Title","level","style","fontWeight","marginBottom","Controller","name","render","_ref2","_errors$password","field","CustomInput2","_ref3","_errors$newPassword","_ref4","_errors$confirmPasswo","onClick","classStyle","link","items","key","Link","to","navLinks","id","title","_useState","useNavigate","useState","window","location","pathname","_useState2","selectedUrlPath","setSelectedUrlPath","Space","Avatar","src","images","Dropdown","menu","trigger","placement","direction","map","color","textDecoration","undefined","path","updateProfileUrl","authApi","baseApi","endpoints","builder","signUp","mutation","query","body","url","method","signIn","logOut","updateProfile","patch","Object","assign","_objectDestructuringEmpty","invalidatesTags","transformErrorResponse","response","changePassword","getUserProfile","userid","providesTags","overrideExisting","useSignInMutation","useSignUpMutation","useUpdateProfileMutation","useLogOutMutation","useGetUserProfileQuery","length","position","toast","passwordSchema","z","min","max","regex","SignInFormSchema","email","SignUpFormSchema","extend","fullName","UpdateAuthSchema","avatar","bio","userName","portfolio","facebookId","instagramId","refine"],"sourceRoot":""}
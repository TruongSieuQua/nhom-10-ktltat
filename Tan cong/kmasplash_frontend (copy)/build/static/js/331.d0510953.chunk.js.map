{"version":3,"file":"static/js/331.d0510953.chunk.js","mappings":"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","sources":["components/Button/CommonButton.tsx","components/Input/CommonInput2.tsx","pages/Register/Register.tsx","redux/api/authApi.ts","utils/toast.ts","validators/Auth.validators.ts"],"sourcesContent":["import { Button } from \"antd\";\nimport styled from \"styled-components\";\n\nconst CommonButton = styled(Button)`\n  width: 100%;\n  height: 3rem;\n`;\n\nexport default CommonButton;\n","import React from \"react\";\nimport { Input, Form, Typography, InputProps } from \"antd\";\n\ninterface CustomInputProps extends InputProps {\n  label?: string;\n  error?: string;\n}\n\nconst CustomInput2: React.FC<CustomInputProps> = ({\n  label,\n  error,\n  ...rest\n}) => {\n  return (\n    <>\n      {label && (\n        <Typography.Text className=\"text-base inline-block mb-1 pr-1\" strong>\n          {label}\n        </Typography.Text>\n      )}\n      <Form.Item\n        className=\"flex-column\"\n        validateStatus={error ? \"error\" : \"\"}\n        help={<Typography.Text type=\"danger\">{error}</Typography.Text>}\n      >\n        <Input size=\"large\" {...rest} />\n      </Form.Item>\n    </>\n  );\n};\n\nexport default CustomInput2;\n","import { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Typography } from \"antd\";\nimport Form from \"antd/es/form\";\nimport images from \"assets/images/images\";\nimport CommonButton from \"components/Button/CommonButton\";\nimport CustomInput2 from \"components/Input/CommonInput2\";\nimport { TError } from \"models/Error.interface\";\nimport * as React from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useSignUpMutation } from \"redux/api/authApi\";\nimport { signIn } from \"redux/slices/authSlice\";\nimport { useAppDispatch } from \"redux/store\";\nimport { showMessage } from \"utils/toast\";\nimport { SignUpFormData, SignUpFormSchema } from \"validators/Auth.validators\";\n\ninterface IRegisterProps {\n  id?: any;\n}\n\nconst Register: React.FunctionComponent<IRegisterProps> = (props) => {\n  //const {} = props;\n  const navigate = useNavigate();\n\n  const [signUpMutation, signUpResult] = useSignUpMutation();\n  const dispatch = useAppDispatch();\n  const {\n    handleSubmit,\n    control,\n    formState: { errors },\n  } = useForm<SignUpFormData>({\n    resolver: zodResolver(SignUpFormSchema),\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n      fullName: \"\",\n    },\n  });\n  const onSubmit = async (formData: SignUpFormData) => {\n    try {\n      const response = await signUpMutation(formData).unwrap();\n      dispatch(signIn(response));\n      showMessage(\"Login Successfully\", \"success\");\n      navigate(\"/\");\n    } catch (error: TError | any) {\n      showMessage(error.data.message, \"error\");\n    }\n  };\n  return (\n    <div className=\"text-sm w-full h-screen flex\">\n      <div className=\"fixed top-4 left-4\">\n        <Link to=\"/home\">\n          <img src={images.loginIcon} className=\"w-16 h-16 object-cover\" />\n        </Link>\n      </div>\n      <div\n        className=\"left-pane sm:hidden lg:block lg:w-1/2 2xl:w-2/5\"\n        style={{\n          backgroundImage: `url(${images.loginBanner})`,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n          boxShadow: \"inset 0 0 0 100vmax rgba(0, 0, 0, .25)\",\n        }}\n      >\n        <div\n          className=\"font-sans text-white flex flex-col justify-center relative\"\n          style={{\n            height: \"98vh\",\n            width: \"76%\",\n            maxWidth: \"32rem\",\n            margin: \"0 auto\",\n          }}\n        >\n          <Typography.Title\n            level={1}\n            style={{ fontWeight: 700, color: \"#fff\", marginBottom: 0 }}\n          >\n            Creation start here\n          </Typography.Title>\n          <Typography.Title\n            level={4}\n            style={{ fontWeight: 600, color: \"#fff\" }}\n          >\n            {`Access ${1402} free, high-resolution photos you\n            can't find anywhere else`}\n          </Typography.Title>\n          <Typography.Title\n            level={5}\n            className=\"absolute bottom-6\"\n            style={{ fontWeight: 600, color: \"Gray\" }}\n          >\n            Powered 2 days ago by KMA\n          </Typography.Title>\n        </div>\n      </div>\n\n      <div className=\"right-pane sm:w-full lg:w-1/2 2xl:w-3/5 flex flex-col justify-center items-center\">\n        <div className=\"max-w-[34rem] w-full px-3\">\n          <Typography.Title\n            level={1}\n            className=\"text-center\"\n            style={{ fontWeight: 700 }}\n          >\n            Join Kma Splash\n          </Typography.Title>\n          <Typography.Paragraph className=\"pb-[2rem] text-center\">\n            {\"Already have an account? \"}\n            <Link\n              to={\"/login\"}\n              className=\"text-gray-500 underline hover:text-gray-800\"\n            >\n              Login now!\n            </Link>\n          </Typography.Paragraph>\n\n          <Form className=\"flex flex-col\">\n            <Typography.Paragraph className=\"text-center\">\n              {\n                \"Almost there. To finish creating your account, fill in the missing details below.\"\n              }\n            </Typography.Paragraph>\n            <Form.Item className=\"mb-0\">\n              <Controller\n                control={control}\n                name=\"fullName\"\n                render={({ field }) => (\n                  <CustomInput2\n                    label=\"Full Name\"\n                    type=\"fullName\"\n                    {...field}\n                    placeholder=\"Enter your full name\"\n                    error={errors.fullName?.message}\n                  />\n                )}\n              />\n            </Form.Item>\n            <Form.Item className=\"mb-0\">\n              <Controller\n                control={control}\n                name=\"email\"\n                render={({ field }) => (\n                  <CustomInput2\n                    label=\"Email\"\n                    type=\"email\"\n                    {...field}\n                    placeholder=\"Enter your email address\"\n                    error={errors.email?.message}\n                  />\n                )}\n              />\n            </Form.Item>\n\n            <Form.Item>\n              <Controller\n                control={control}\n                name=\"password\"\n                render={({ field }) => (\n                  <CustomInput2\n                    label=\"Password\"\n                    type=\"password\"\n                    {...field}\n                    placeholder=\"Enter your password\"\n                    error={errors.password?.message}\n                  />\n                )}\n              />\n            </Form.Item>\n\n            <Form.Item>\n              <CommonButton\n                type=\"primary\"\n                htmlType=\"submit\"\n                onClick={handleSubmit(onSubmit)}\n                className=\"w-full bg-gray-900 hover:bg-gray-800\"\n              >\n                Join\n              </CommonButton>\n            </Form.Item>\n          </Form>\n\n          <Typography.Paragraph style={{ color: \"gray\" }}>\n            {\"By joining, you agree to the \"}\n            <Link to=\"/terms\" className=\"underline hover:text-gray-800\">\n              Terms\n            </Link>\n            {\" and \"}\n            <Link to=\"/policy\" className=\"underline hover:text-gray-800\">\n              Private Policy\n            </Link>\n          </Typography.Paragraph>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","// https://redux.js.org/tutorials/essentials/part-8-rtk-query-advanced#injecting-endpoints\n\nimport {\n  ChangePassword,\n  SignInRequest,\n  SignInResponse,\n  SignUpRequest,\n  UpdateProfile,\n  User,\n} from \"models/auth.interface\";\nimport { baseApi } from \"services/baseApi\";\n\nconst signUpUrl = \"auth/register\";\nconst login = \"auth/login\";\nconst logOut = \"auth/logout\";\n\nconst changePassword = \"auth/change-password\";\nconst updateProfileUrl = \"user/\";\n\nexport const authApi = baseApi.injectEndpoints({\n  endpoints: (builder) => ({\n    signUp: builder.mutation<SignInResponse, SignUpRequest>({\n      query: (body) => ({\n        url: signUpUrl,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    signIn: builder.mutation<SignInResponse, SignInRequest>({\n      query: (body) => ({\n        url: login,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    logOut: builder.mutation({\n      query: () => ({\n        url: logOut,\n        method: \"POST\",\n      }),\n    }),\n    updateProfile: builder.mutation<User, UpdateProfile>({\n      query: ({ ...patch }) => ({\n        url: updateProfileUrl,\n        method: \"PATCH\",\n        body: patch,\n      }),\n      invalidatesTags: [\"Profile\"],\n      transformErrorResponse: (response: any) => {\n        return response.data;\n      },\n    }),\n    changePassword: builder.mutation<User, ChangePassword>({\n      query: (body) => ({\n        url: changePassword,\n        method: \"POST\",\n        body,\n      }),\n      transformErrorResponse: (response: any) => {\n        return response.data;\n      },\n    }),\n    getUserProfile: builder.query<User, any>({\n      query: (userid) => ({\n        url: updateProfileUrl + userid,\n      }),\n      providesTags: [\"Profile\"],\n    }),\n  }),\n  overrideExisting: true,\n});\n\nexport const {\n  useSignInMutation,\n  useSignUpMutation,\n  useUpdateProfileMutation,\n\n  useLogOutMutation,\n  useChangePasswordMutation,\n  useGetUserProfileQuery,\n} = authApi;\n","import { toast, ToastPosition, TypeOptions } from \"react-toastify\";\n\nexport const showMessage = (\n  message: string,\n  type: TypeOptions = \"success\",\n  position: ToastPosition = \"bottom-right\",\n  className?: string,\n): void => {\n  toast(message, {\n    position,\n    className,\n    type,\n  });\n};\n","import { z } from \"zod\";\nconst REGEXP_PASSWORD_RULE: string | RegExp =\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d@$!%*#?&]{6,}$/;\n\nconst passwordSchema = z\n  .string()\n  .min(6, { message: \"Must be 6 or more characters long\" })\n  .max(30, { message: \"Must be 30 or less characters long\" })\n  .regex(REGEXP_PASSWORD_RULE, {\n    message: \"Must contain lowercase, uppercase, digit and special character\",\n  });\n\n/// sign In\nexport const SignInFormSchema = z.object({\n  email: z\n    .string()\n    .min(5, { message: \"Invalid Email\" })\n    .email({ message: \"Invalid Email\" }),\n  password: passwordSchema,\n});\n\nexport type SignInFormData = z.infer<typeof SignInFormSchema>;\n// sign up\n\nexport const SignUpFormSchema = SignInFormSchema.extend({\n  fullName: z\n    .string()\n    .min(3, { message: \"Must be 3 or more characters long\" })\n    .max(50, { message: \"Must be 50 or less characters long\" })\n    .regex(/^[\\p{L}\\s\\p{Lo}]+$/u, \"Invalid name format\"),\n});\n\nexport type SignUpFormData = z.infer<typeof SignUpFormSchema>;\n\nexport const UpdateAuthSchema = z.object({\n  fullName: z.optional(z.string()),\n  avatar: z.optional(z.string()),\n  bio: z.optional(z.string()),\n  userName: z.optional(\n    z\n      .string()\n      .min(2)\n      .max(30)\n      .regex(/[\\w\\d_]+$/, {\n        message: \"Username can only contain letters, numbers, and underscores!\",\n      }),\n  ),\n  portfolio: z.optional(z.string()),\n  facebookId: z.optional(z.string()),\n  instagramId: z.optional(z.string()),\n  location: z.optional(z.string()),\n});\nexport type UpdateAuthFormData = z.infer<typeof UpdateAuthSchema>;\n\nexport const ChangePasswordFormSchema = z\n  .object({\n    password: passwordSchema,\n    newPassword: passwordSchema,\n    confirmPassword: passwordSchema,\n  })\n  .refine(\n    (data) => {\n      return data.newPassword === data.confirmPassword;\n    },\n    {\n      message: \"Mat khau khong khop\",\n      path: [\"confirmPassword\"],\n    },\n  );\n// .refine(\n//   (data) => {\n//     // const pattern = new RegExp(REGEXP_PASSWORD_RULE);\n\n//     return pattern.test(data.newPassword);\n//   },\n//   {\n//     message: \"Mat khuan phai co 8 ky tu\",\n//     path: [\"newPassword\"],\n//   },\n// );\n\nexport type ChangePasswordFormData = z.infer<typeof ChangePasswordFormSchema>;\n"],"names":["CommonButton","styled","Button","_templateObject","_taggedTemplateLiteral","_ref","label","error","rest","_objectWithoutProperties","_excluded","_jsxs","_Fragment","children","_jsx","Typography","className","strong","Form","validateStatus","help","type","Input","_objectSpread","size","props","navigate","useNavigate","_useSignUpMutation","useSignUpMutation","_useSignUpMutation2","_slicedToArray","signUpMutation","dispatch","useAppDispatch","_useForm","useForm","resolver","zodResolver","SignUpFormSchema","defaultValues","email","password","fullName","handleSubmit","control","errors","formState","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","response","wrap","_context","prev","next","unwrap","sent","signIn","showMessage","t0","data","message","stop","_x","apply","arguments","Link","to","src","images","style","backgroundImage","concat","backgroundSize","backgroundPosition","boxShadow","height","width","maxWidth","margin","level","fontWeight","color","marginBottom","Controller","name","render","_ref2","_errors$fullName","field","CustomInput2","placeholder","_ref3","_errors$email","_ref4","_errors$password","htmlType","onClick","updateProfileUrl","authApi","baseApi","endpoints","builder","signUp","mutation","query","body","url","method","logOut","updateProfile","patch","Object","assign","_objectDestructuringEmpty","invalidatesTags","transformErrorResponse","changePassword","getUserProfile","userid","providesTags","overrideExisting","useSignInMutation","useUpdateProfileMutation","useLogOutMutation","useChangePasswordMutation","useGetUserProfileQuery","length","undefined","position","toast","passwordSchema","z","min","max","regex","SignInFormSchema","extend","UpdateAuthSchema","avatar","bio","userName","portfolio","facebookId","instagramId","location","ChangePasswordFormSchema","newPassword","confirmPassword","refine","path"],"sourceRoot":""}